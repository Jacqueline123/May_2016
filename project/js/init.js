/** * Created by AlexKonov on 10.01.2016. */ function TellMeLoad(url, data, onSuccess, onError) { function isArray(value) { return (value instanceof Array); } function arrayToGet(obj, arr) { var result = ''; for (var key in obj) if (!isArray(obj[key])) result += !arr ? '&' + key + '=' + obj[key] : '&' + arr + '[' + key + ']=' + obj[key]; else result += arrayToGet(obj[key], (!arr ? key : arr + '[' + key + ']')); return result; } var server = 'https://st.tellmechat.ru'; var xh; try { xh = new ActiveXObject("Msxml2.xh"); } catch (e) { try { xh = new ActiveXObject("Microsoft.xh"); } catch (E) { xh = false; } } if (!xh && typeof XMLHttpRequest != 'undefined') xh = new XMLHttpRequest(); xh.onreadystatechange = function () { if (xh.readyState == 4 && xh.status == 200) { if (onSuccess) onSuccess(JSON.parse(xh.responseText)); } else if (xh.readyState == 4 && xh.status != 200 && onError) onError(xh); }; xh.withCredentials = true; xh.open('POST', server + '/' + url, true); xh.setRequestHeader('Content-type', 'application/x-www-form-urlencoded'); data.url = encodeURIComponent(window.location.href); data.date = encodeURIComponent(new Date().toTimeString().slice(0, 17)); xh.send(arrayToGet(data)); } (function (w, d) { var TM= { TWidgets: null, url: 'get-chat', status: {js: null, css: null}, isArray:function(value) { return (value instanceof Array); }, init: function (data, container) { if (container && (typeof selector) != 'object') { container = d.querySelector(container); } TellMeLoad(this.url, data, function (result) { if (result.error && result.error.length) { TM.write(result.error); } else { if (result.images) { for (var k in result.images) { var img = new Image(); img.src = result.images[k]; } } if (result.js) { TM.status.js = 0; var js = d.createElement('script'); js.onreadystatechange = function () { var self = this; if (this.readyState == "complete" || this.readyState == "loaded") setTimeout(function () { self.onload(); }, 0); }; js.onload = function () { TM.status.js = 1; }; js.onerror = function () { TM.write('Error js load'); TM.status.js = 2; }; js.src = result.js; d.head.appendChild(js); } if (result.css) { TM.status.css = 0; var css = d.createElement('link'); css.rel = 'stylesheet'; css.type = 'text/css'; css.onload = function () { TM.status.css = 1; }; css.onerror = function () { TM.write('Error css load'); TM.status.css = 2; }; css.href = result.css; d.head.appendChild(css); } if (result.js != null || result.css != null) var kInt = setInterval(function () { if (TM.status.js == 2 || TM.status.css == 2) clearInterval(kInt); else if ((TM.status.js == null || TM.status.js == 1) && (TM.status.css == null || TM.status.css == 1)) { TM.TWidgets = new TWidgets(container ? container : d.body); TM.TWidgets.init(result.widgets); clearInterval(kInt); } }, 100); } }, function (xh) { TM.write('Error load ' + TM.url); }) }, write: function (msg) { msg = this.isArray(msg) ? msg.join("\n") : msg; console.log(msg); } }; w.TellMe = TM; })(window, document);